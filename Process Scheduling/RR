#include <stdio.h>

int main() {
    int n, i, time = 0, tq;
    int bt[10], rt[10], wt[10] = {0}, tat[10];
    int queue[100], porder[100];  // For Gantt chart
    int idx = 0;  // Tracks current index for chart

    float total_wt = 0, total_tat = 0;  // To calculate averages

    // Input number of processes
    printf("Enter number of processes: ");
    scanf("%d", &n);

    // Input burst time for each process
    printf("Enter burst time for each process:\n");
    for(i = 0; i < n; i++) {
        printf("P%d: ", i+1);
        scanf("%d", &bt[i]);
        rt[i] = bt[i];  // Initialize remaining time
    }

    // Input time quantum
    printf("Enter time quantum: ");
    scanf("%d", &tq);

    int done;  // Flag to track if all processes are done

    // Round Robin loop
    do {
        done = 1;
        for(i = 0; i < n; i++) {
            if(rt[i] > 0) {
                done = 0;
                porder[idx] = i + 1;

                if(rt[i] > tq) {
                    time += tq;
                    rt[i] -= tq;
                } else {
                    time += rt[i];
                    wt[i] = time - bt[i];  // Waiting time
                    rt[i] = 0;
                }

                queue[idx] = time;
                idx++;
            }
        }
    } while(!done);  // Repeat until all done

    // Display process table
    printf("\nProcess\tBT\tWT\tTAT\n");
    for(i = 0; i < n; i++) {
        tat[i] = bt[i] + wt[i];  // TAT = BT + WT
        printf("P%d\t%d\t%d\t%d\n", i+1, bt[i], wt[i], tat[i]);

        total_wt += wt[i];   // Add to total waiting time
        total_tat += tat[i]; // Add to total turnaround time
    }

    // Print averages
    printf("\nAverage Waiting Time = %.2f\n", total_wt / n);
    printf("Average Turnaround Time = %.2f\n", total_tat / n);

    // Gantt Chart
    printf("\nGantt Chart:\n");

    for(i = 0; i < idx; i++)
        printf("-------");
    printf("\n|");

    for(i = 0; i < idx; i++)
        printf(" P%d |", porder[i]);
    printf("\n");

    for(i = 0; i < idx; i++)
        printf("-------");

    printf("\n0");
    for(i = 0; i < idx; i++)
        printf("     %d", queue[i]);

    printf("\n");

    return 0;
}
