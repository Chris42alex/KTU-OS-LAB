#include <stdio.h>

int main() {
    int i, j, n, a[50], frame[10], freq[10], no, k, count = 0;

    // Ask user for number of pages
    printf("\nEnter the number of pages: ");
    scanf("%d", &n);

    // Ask user to enter the page numbers
    printf("Enter the page numbers: ");
    for(i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }

    // Ask user for number of frames
    printf("\nEnter the number of frames: ");
    scanf("%d", &no);

    // Initialize frames and frequency counts
    for(i = 0; i < no; i++) {
        frame[i] = -1;
        freq[i] = 0;
    }

    printf("\nRef_String\tPage_Frames\n");

    for(i = 0; i < n; i++) {
        int found = 0;

        // Check if page is already in frame
        for(j = 0; j < no; j++) {
            if(frame[j] == a[i]) {
                freq[j]++;  // Increase frequency
                found = 1;
                break;
            }
        }

        // If not found â†’ page fault
        if(found == 0) {
            int pos = -1;

            // Check for an empty frame
            for(j = 0; j < no; j++) {
                if(frame[j] == -1) {
                    pos = j;
                    break;
                }
            }

            // If no empty frame, find LFU (Least Frequently Used)
            if(pos == -1) {
                int minFreq = freq[0];
                pos = 0;

                for(j = 1; j < no; j++) {
                    if(freq[j] < minFreq) {
                        minFreq = freq[j];
                        pos = j;
                    }
                }
            }

            // Replace LFU page
            frame[pos] = a[i];
            freq[pos] = 1;  // Reset frequency for the new page
            count++;

            // Print current frame state
            printf("%d\t\t", a[i]);
            for(k = 0; k < no; k++) {
                if(frame[k] != -1)
                    printf("%d\t", frame[k]);
                else
                    printf("-\t");
            }
        } else {
            // Hit case â€“ just print current state
            printf("%d\t\t", a[i]);
            for(k = 0; k < no; k++) {
                if(frame[k] != -1)
                    printf("%d\t", frame[k]);
                else
                    printf("-\t");
            }
        }

        printf("\n");
    }

    // Final page fault count
    printf("\nTotal Page Faults: %d\n", count);

    return 0;
}
